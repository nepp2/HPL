
struct sdl_keysym {
  scancode : u32
  sym : u32
  mod : u16
  unused : u32
}

struct sdl_window_event {
  window_id : u32
  event : u8
  data1 : i32
  data2 : i32
}

struct sdl_keyboard_event {
  window_id : u32
  state : u8
  repeat : u8
  keysym : sdl_keysym
}

// this exists to make sure the event union can hold all the cases (because I guess I haven't implemented the biggest ones)
struct sdl_padding {
  a0 : i64
  a1 : i64
  a2 : i64
  a3 : i64
  a4 : i64
  a5 : i64
  a6 : i64
  a7 : i64
  a8 : i64
  a9 : i64
  a10 : i64
  a11 : i64
  a12 : i64
  a13 : i64
  a14 : i64
  a15 : i64
  a16 : i64
  a17 : i64
  a18 : i64
  a19 : i64
}


union sdl_event_content {
  none : i64
  window : sdl_window_event
  keyboard : sdl_keyboard_event
  padding : sdl_padding
}

struct sdl_event {
  event_type : u32
  timestamp : u32
  content : sdl_event_content
}

struct sdl_rect {
  x : i32
  y : i32
  w : i32
  h : i32
}

static SDL_QUIT = 256

static SDL_WINDOWEVENT = 512

static SDL_KEYDOWN = 768
static SDL_KEYUP = 769
static SDL_TEXTEDITING =  770
static SDL_TEXTINPUT = 771

static SDL_RENDERER_SOFTWARE = 1
static SDL_RENDERER_ACCELERATED = 2
static SDL_RENDERER_PRESENTVSYNC = 4
static SDL_RENDERER_TARGETTEXTURE = 8

static sdl2 = load_library(&"SDL2")
static sdl_init = load_symbol(sdl2, &"SDL_Init") as fun(u32) => i32

struct sdl_window_handle { p : ptr(u8) }

struct sdl_renderer_handle { p : ptr(u8) }

static sdl_create_window =
  load_symbol(sdl2, &"SDL_CreateWindow") as
    fun(title: ptr(u8), x : i32, y : i32, w : i32, h : i32, flags : u32) => sdl_window_handle

static sdl_create_renderer =
  load_symbol(sdl2, &"SDL_CreateRenderer") as
    fun(window : sdl_window_handle, index : i32, flags : u32) => sdl_renderer_handle

static sdl_clear =
  load_symbol(sdl2, &"SDL_RenderClear") as
    fun(renderer : sdl_renderer_handle) => i32

static sdl_set_draw_color =
  load_symbol(sdl2, &"SDL_SetRenderDrawColor") as
    fun(renderer : sdl_renderer_handle, r : u8, g : u8, b : u8, a : u8) => i32

static sdl_present =
  load_symbol(sdl2, &"SDL_RenderPresent") as
    fun(renderer : sdl_renderer_handle)

static sdl_fill_rect =
  load_symbol(sdl2, &"SDL_RenderFillRect") as
    fun(renderer : sdl_renderer_handle, rect : ptr(sdl_rect))

static sdl_poll_event =
  load_symbol(sdl2, &"SDL_PollEvent") as
    fun(event : ptr(sdl_event)) => i32

static SDL_INIT_VIDEO = 32 as u32
static SDL_WINDOWPOS_UNDEFINED = 536805376 as i32
static SDL_WINDOW_OPENGL = 2 as u32
static SDL_WINDOW_SHOWN = 4 as u32
